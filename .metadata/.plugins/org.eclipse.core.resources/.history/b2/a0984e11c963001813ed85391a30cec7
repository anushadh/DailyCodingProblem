package problems;

import java.util.Arrays;

/*Given a list of numbers, return whether any two sums to k.

For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.*/

public class Day1 {

	public static void main(String[] args) {
		int[] list = new int[]{10, 15, 3, 7};
		int k = 17;
		boolean isSumK = isSumK(list, k);
		System.out.println("isSumK:: " + isSumK);
		System.out.println("****************");
		//Bonus: Do it in one pass
		findPair(list, k);
		System.out.println("****************");
		findPairWithSet(list, k);
	}

	static void findPairWithSet(int[] list, int sum) {
	
		
	}

	static boolean isSumK(int[] list, int sum) {
		int sizeOfList = list.length;
		boolean isTrue = false;
		for(int i = 0; i < sizeOfList - 1; i++) {
			for(int j = i+1; j < sizeOfList; j++) {
				if(list[i] + list[j] == sum) {
					isTrue = true;
					System.out.println("Sum:: " + list[i] + " + "
							+ "" + list[j] + " = " + sum);
					return isTrue;
				}
			}
		}
		return isTrue;
	}
	
	static void findPair(int[] list, int sum) {
		int size = list.length;
		Arrays.sort(list);
		int start = 0;
		int end = size - 1;
		while(start < end) {
			if(list[start] + list[end] == sum) {
				System.out.println("Sum in pair:: " + list[start] + " + "
						+ "" + list[end] + " = " + sum);
				break;
			}
			else if(list[start] + list[end] < sum) {
				start++;
			} else {
				end--;
			}
		}
		
	}
}
